{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Image } from \"expo-image\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport GlobalStyles from \"../styles/GlobalStyles\";\nimport * as Font from 'expo-font';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SplashScreen = function SplashScreen() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    fontsLoaded = _React$useState2[0],\n    setFontsLoaded = _React$useState2[1];\n  React.useEffect(function () {\n    function loadFont() {\n      return _loadFont.apply(this, arguments);\n    }\n    function _loadFont() {\n      _loadFont = _asyncToGenerator(function* () {\n        yield Font.loadAsync({\n          'Poppins-Black': require(\"../assets/fonts/Poppins-Black.ttf\"),\n          'Poppins-SemiBold': require(\"../assets/fonts/Poppins-SemiBold.ttf\")\n        });\n        setFontsLoaded(true);\n      });\n      return _loadFont.apply(this, arguments);\n    }\n    loadFont();\n  }, []);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(LinearGradient, {\n    style: styles.splashscreen,\n    locations: [0, 1],\n    colors: [\"#3b6098\", \"#11294e\"],\n    children: _jsxs(View, {\n      style: [styles.titulo, styles.tituloLayout],\n      children: [_jsx(Text, {\n        style: [styles.opto, styles.optoPosition],\n        children: \"OPTO\"\n      }), _jsx(Text, {\n        style: [styles.indama, styles.optoPosition],\n        children: \"Indama\"\n      }), _jsx(Image, {\n        style: [styles.logooptoIcon, styles.tituloLayout],\n        contentFit: \"cover\",\n        source: require(\"../assets/LogoOPTO.png\")\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  tituloLayout: {\n    width: 200,\n    position: \"absolute\"\n  },\n  optoPosition: {\n    textAlign: \"left\",\n    color: GlobalStyles.Color.colorWhite,\n    left: \"50%\",\n    position: \"absolute\"\n  },\n  opto: {\n    marginLeft: -86,\n    top: 193,\n    fontSize: 60,\n    fontWeight: \"900\",\n    fontFamily: GlobalStyles.FontFamily.poppinsBlack,\n    width: 171\n  },\n  indama: {\n    marginLeft: -61,\n    top: 260,\n    fontSize: 30,\n    fontWeight: \"600\",\n    fontFamily: GlobalStyles.FontFamily.poppinsSemiBold\n  },\n  logooptoIcon: {\n    top: 0,\n    left: 0,\n    height: 200,\n    width: 200,\n    position: \"absolute\"\n  },\n  titulo: {\n    marginLeft: -100,\n    top: 184,\n    height: 305,\n    left: \"50%\",\n    width: 200,\n    position: \"absolute\"\n  },\n  splashscreen: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"hidden\",\n    backgroundColor: \"transparent\"\n  }\n});\nexport default SplashScreen;","map":{"version":3,"names":["React","Text","StyleSheet","View","Image","LinearGradient","GlobalStyles","Font","jsx","_jsx","jsxs","_jsxs","SplashScreen","_React$useState","useState","_React$useState2","_slicedToArray","fontsLoaded","setFontsLoaded","useEffect","loadFont","_loadFont","apply","arguments","_asyncToGenerator","loadAsync","require","style","styles","splashscreen","locations","colors","children","titulo","tituloLayout","opto","optoPosition","indama","logooptoIcon","contentFit","source","create","width","position","textAlign","color","Color","colorWhite","left","marginLeft","top","fontSize","fontWeight","fontFamily","FontFamily","poppinsBlack","poppinsSemiBold","height","flex","overflow","backgroundColor"],"sources":["C:/Users/pablo/GitHub/OptoApp/screens/SplashScreen.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { Text, StyleSheet, View } from \"react-native\";\r\nimport { Image } from \"expo-image\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport GlobalStyles from \"../styles/GlobalStyles\";\r\nimport * as Font from 'expo-font';\r\n\r\nconst SplashScreen = () => {\r\n  const [fontsLoaded, setFontsLoaded] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    async function loadFont() {\r\n      await Font.loadAsync({\r\n        'Poppins-Black': require('../assets/fonts/Poppins-Black.ttf'),\r\n        'Poppins-SemiBold': require('../assets/fonts/Poppins-SemiBold.ttf'),\r\n      });\r\n      setFontsLoaded(true); // Marcar las fuentes como cargadas\r\n    }\r\n    loadFont();\r\n  }, []);\r\n\r\n  // Renderizar el componente solo si las fuentes est√°n cargadas\r\n  if (!fontsLoaded) {\r\n    return null; // O cualquier otro indicador de carga que desees mostrar\r\n  }\r\n\r\n  return (\r\n    <LinearGradient\r\n      style={styles.splashscreen}\r\n      locations={[0, 1]}\r\n      colors={[\"#3b6098\", \"#11294e\"]}\r\n    >\r\n      <View style={[styles.titulo, styles.tituloLayout]}>\r\n        <Text style={[styles.opto, styles.optoPosition]}>OPTO</Text>\r\n        <Text style={[styles.indama, styles.optoPosition]}>Indama</Text>\r\n        <Image\r\n          style={[styles.logooptoIcon, styles.tituloLayout]}\r\n          contentFit=\"cover\"\r\n          source={require(\"../assets/LogoOPTO.png\")}\r\n        />\r\n      </View>\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  tituloLayout: {\r\n    width: 200,\r\n    position: \"absolute\",\r\n  },\r\n  optoPosition: {\r\n    textAlign: \"left\",\r\n    color: GlobalStyles.Color.colorWhite,\r\n    left: \"50%\",\r\n    position: \"absolute\",\r\n  },\r\n  opto: {\r\n    marginLeft: -86,\r\n    top: 193,\r\n    fontSize: 60,\r\n    fontWeight: \"900\",\r\n    fontFamily: GlobalStyles.FontFamily.poppinsBlack,\r\n    width: 171,\r\n  },\r\n  indama: {\r\n    marginLeft: -61,\r\n    top: 260,\r\n    fontSize: 30,\r\n    fontWeight: \"600\",\r\n    fontFamily: GlobalStyles.FontFamily.poppinsSemiBold,\r\n  },\r\n  logooptoIcon: {\r\n    top: 0,\r\n    left: 0,\r\n    height: 200,\r\n    width: 200,\r\n    position: \"absolute\",\r\n  },\r\n  titulo: {\r\n    marginLeft: -100,\r\n    top: 184,\r\n    height: 305,\r\n    left: \"50%\",\r\n    width: 200,\r\n    position: \"absolute\",\r\n  },\r\n  splashscreen: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n});\r\n\r\nexport default SplashScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}